Sending build context to Docker daemon  548.2MB
Step 1/31 : FROM ubuntu:16.04
 ---> 96da9143fb18
Step 2/31 : RUN mkdir -p /data2
 ---> Using cache
 ---> e4c725bab7ac
Step 3/31 : RUN mkdir -p /opt2
 ---> Using cache
 ---> 1ee75dea4ea1
Step 4/31 : RUN apt-get update &&     apt-get upgrade -y
 ---> Using cache
 ---> 996875279093
Step 5/31 : RUN apt-get install -y libxml2-dev software-properties-common apt-transport-https
 ---> Using cache
 ---> f42dbd31c08a
Step 6/31 : RUN echo "deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/" >> /etc/apt/sources.list
 ---> Using cache
 ---> 8cbb7c2f8b7d
Step 7/31 : RUN apt-get update &&     apt-get upgrade -y --allow-unauthenticated
 ---> Using cache
 ---> a7abcc435dc9
Step 8/31 : RUN apt-get install --fix-missing -y --allow-unauthenticated     cmake     default-jre     g++     gcc     make     r-base
 ---> Using cache
 ---> 90591bd766a7
Step 9/31 : RUN apt-get install -y --allow-unauthenticated 	libcurl4-gnutls-dev 	librtmp-dev 	libssl-dev
 ---> Using cache
 ---> 34be46345f67
Step 10/31 : RUN apt-get install -y --allow-unauthenticated r-base-core
 ---> Using cache
 ---> 5c4db06f8adb
Step 11/31 : COPY install_R_packages.R /opt2
 ---> Using cache
 ---> 90708acb1c08
Step 12/31 : WORKDIR /opt2
 ---> Using cache
 ---> 28417c42343a
Step 13/31 : RUN Rscript install_R_packages.R
 ---> Using cache
 ---> af4ae805ffb0
Step 14/31 : COPY Dockerfile /opt2
 ---> Using cache
 ---> b6fc424f24b9
Step 15/31 : COPY argparse.bash /opt2
 ---> Using cache
 ---> ecf31547ce5a
Step 16/31 : RUN mkdir -p /opt2/db
 ---> Using cache
 ---> 6d6a4ba97689
Step 17/31 : COPY BlueprintEncodeData.rds /opt2/db
 ---> Using cache
 ---> f808927a6f6f
Step 18/31 : COPY DatabaseImmuneCellExpressionData.rds /opt2/db
 ---> Using cache
 ---> ea23e8de0bd4
Step 19/31 : COPY HumanPrimaryCellAtlasData.rds /opt2/db
 ---> Using cache
 ---> c3e8e78e739e
Step 20/31 : COPY ImmGenData.rds /opt2/db
 ---> Using cache
 ---> 8a2a490b73be
Step 21/31 : COPY MonacoImmuneData.rds /opt2/db
 ---> Using cache
 ---> 8133a25d4a03
Step 22/31 : COPY MouseRNAseqData.rds /opt2/db
 ---> Using cache
 ---> 7d59f7593fd0
Step 23/31 : COPY NovershternHematopoieticData.rds /opt2/db
 ---> Using cache
 ---> 8e751c70352c
Step 24/31 : COPY singleR_standalone.R /opt2
 ---> 1dd141098ace
Step 25/31 : RUN chmod a+r /opt2/*.*
 ---> Running in ba0accdf215d
Removing intermediate container ba0accdf215d
 ---> 637b8d78ffbc
Step 26/31 : RUN chmod a+r /opt2/db/*.rds
 ---> Running in b6c5092ea48f
Removing intermediate container b6c5092ea48f
 ---> 30b775b68445
Step 27/31 : RUN chmod a+r Dockerfile
 ---> Running in 9e9f9a181ac6
Removing intermediate container 9e9f9a181ac6
 ---> 0124a9f722e2
Step 28/31 : ENV PATH="/opt2:${PATH}"
 ---> Running in 9e9e52b33280
Removing intermediate container 9e9e52b33280
 ---> 5e8ed471e33f
Step 29/31 : WORKDIR /data2
 ---> Running in 55617b7ce4ed
Removing intermediate container 55617b7ce4ed
 ---> fbc9701ffceb
Step 30/31 : RUN apt-get clean
 ---> Running in 0795fca05039
Removing intermediate container 0795fca05039
 ---> 2dfc3a0e1d3d
Step 31/31 : MAINTAINER vishal.koparde@nih.gov
 ---> Running in dbf75e116c27
Removing intermediate container dbf75e116c27
 ---> 0d1bf43c69f1
Successfully built 0d1bf43c69f1
Successfully tagged nciccbr/ccbr_singler:v0.0.1
